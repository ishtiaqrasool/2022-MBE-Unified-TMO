addpath '.\util\';

hdr_file = 'E:\Datasets\RGBE\memorial.hdr';
hdr = hdrread(hdr_file);
Yhdr = lum(hdr);

%% Tone curve to LUT
% Here we show an example, where the original code of the TMO is available
% and it can produce HDR and LDR luminance channels, L and Ld. 
%
% We use Reinhard's TMO and Kim & Kautz's TMO for this example. Any other
% global TMO can be used in the same way, as long as the returned
% parameters are the same.
%
% The original codes of both TMOs taken from the hdr toolbox by Banterle.
% We slightly modify them such that they return the luminance values of the
% HDR and LDR image. 

%[ldr0, L, Ld] = ReinhardTMO_IRK(hdr); % uncomment this or the next line
[ldr0, L, Ld] = KimKautzConsistentTMO_IRK(hdr); 

%% Unified Representation
% Next, we use our code Unified_TMO() to extract a one-dimensional
% 256x1 vector x from L and Ld. The x has the HDR values that map to
% LDR vector: (0,1,2,...,255). 

x = Unified_TMO(L, Ld);
min_y = min(Ld(:)); max_y = max(Ld(:));

%% How well the unified representation fit the original tone-curve?
y = 0:255; 
y = min_y+y/255*(max_y-min_y); 
figure, plot(L, Ld, '+', x, y, '-');

%% Unified implementation
% The 256 values of x, and the minimum and maximum values of LDR luminance
% generated by the original TMO can represent the original TMO. This allows
% a uniform implementation of all global TMOs. Next, we show this
% implementation.

ldr2 = apply_unified_tmo(hdr, Yhdr, x, min_y, max_y);

%% Error
% calculate maximum deviation from the original. We show maximum of the
% absolute difference but other metrics can also be used.
delta = max(abs(ldr0(:)-ldr2(:)));
sprintf('%s %g', 'Max absolute difference is = ', delta)

